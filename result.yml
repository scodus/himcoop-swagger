openapi: 3.0.0
info:
  title: Swagger
  description: Swagger
  version: '1.0'
  x-logo:
    url: https://github.com/joolfe/logoBanner.png
    backgroundColor: '#FFFFFF'
    altText: logo
  termsOfService: '#'
  license:
    name: MIT
    url: https://es.wikipedia.org/wiki/Licencia_MIT
servers:
  - url: http://{{url}}
tags:
  - name: producer
  - name: tea
  - name: blog
  - name: album
  - name: site setting
paths:
  /api/producer:
    get:
      tags:
        - producer
      summary: all producer
      parameters:
        - name: paginate
          in: query
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: string
        - name: search_keyword
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/producer/{id}:
    get:
      tags:
        - producer
      summary: single producer
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/tea:
    get:
      tags:
        - tea
      summary: all tea
      parameters:
        - name: paginate
          in: query
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: string
        - name: search_keyword
          in: query
          schema:
            type: string
        - name: category_id
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/tea/{slug}:
    get:
      tags:
        - tea
      summary: single tea
      parameters:
        - name: slug
          in: path
          schema:
            type: string
          required: true
          example: test-tea
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/blog:
    get:
      tags:
        - blog
      summary: all blog
      parameters:
        - name: paginate
          in: query
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: string
        - name: search_keyword
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/blog/{slug}:
    get:
      tags:
        - blog
      summary: single blog
      parameters:
        - name: slug
          in: path
          schema:
            type: string
          required: true
          example: test
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/album:
    get:
      tags:
        - album
      summary: all album
      parameters:
        - name: paginate
          in: query
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: string
        - name: search_keyword
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/album/{slug}:
    get:
      tags:
        - album
      summary: single album
      parameters:
        - name: slug
          in: path
          schema:
            type: string
          required: true
          example: asdf
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/site-setting/homepage:
    get:
      tags:
        - site setting
      summary: homepage
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/site-setting/importance-of-tea:
    get:
      tags:
        - site setting
      summary: about
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/site-setting/about:
    get:
      tags:
        - site setting
      summary: importance of tea
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/category:
    get:
      tags:
        - default
      summary: all category
      parameters:
        - name: paginate
          in: query
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: string
        - name: search_keyword
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/team:
    get:
      tags:
        - default
      summary: all team
      parameters:
        - name: paginate
          in: query
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: string
        - name: search_keyword
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/service:
    get:
      tags:
        - default
      summary: all service
      parameters:
        - name: paginate
          in: query
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: string
        - name: search_keyword
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/history:
    get:
      tags:
        - default
      summary: all history
      parameters:
        - name: paginate
          in: query
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: string
        - name: search_keyword
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/inquiry:
    post:
      tags:
        - default
      summary: store inquiry contact
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: dfdasdfasdf
                email:
                  type: string
                  example: fdasdfasdf
                inquiry:
                  type: string
                  example: asdfasdfasdf
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
